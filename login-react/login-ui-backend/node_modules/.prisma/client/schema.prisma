generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
  binaryTargets   = ["native", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Building {
  idBuilding    Int        @id @default(autoincrement()) @db.UnsignedInt
  lat           Float      @db.Float
  long          Float      @db.Float
  territory_id  Int?       @db.UnsignedMediumInt
  last_modified DateTime   @default(now()) @db.Timestamp(0)
  address       String?    @db.VarChar(255)
  updatedAt     DateTime?  @db.Timestamp(0)
  Territory     Territory? @relation(fields: [territory_id], references: [idTerritory], onDelete: Cascade, map: "idTerritory")
  Door          Door[]

  @@index([territory_id], map: "idTerritory_idx")
}

model Congregation {
  idCongregation Int         @id @db.UnsignedMediumInt
  name           String?     @db.VarChar(255)
  language       String?     @db.VarChar(100)
  createdAt      DateTime    @default(now()) @db.Timestamp(0)
  updatedAt      DateTime?   @updatedAt @db.Timestamp(0)
  Door           Door[]
  Invite         Invite[]
  Language       Language[]
  Login          Login[]
  Publisher      Publisher[]
  Territory      Territory[]
}

model Door {
  idDoor           Int          @id @default(autoincrement()) @db.UnsignedInt
  language         String?      @db.VarChar(100)
  information_name String?      @db.Text
  building_id      Int?         @db.UnsignedInt
  id_cong_app      Int          @db.UnsignedMediumInt
  id_cong_lang     Int          @db.UnsignedInt
  lastModified     DateTime?    @default(now()) @db.Timestamp(0)
  updatedAt        DateTime?    @db.Timestamp(0)
  Building         Building?    @relation(fields: [building_id], references: [idBuilding], onDelete: Cascade, map: "idBuilding")
  Congregation     Congregation @relation(fields: [id_cong_app], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "id_cong_app1")
  Language         Language     @relation(fields: [id_cong_lang], references: [idLanguage], onDelete: NoAction, onUpdate: NoAction, map: "id_cong_lang")

  @@index([building_id], map: "idBuilding_idx")
  @@index([id_cong_app], map: "id_cong_app_idx")
  @@index([id_cong_lang], map: "id_cong_lang_idx")
}

model Language {
  idLanguage   Int          @id @default(autoincrement()) @db.UnsignedInt
  id_cong_app  Int          @db.UnsignedMediumInt
  id_cong_lang Int          @db.UnsignedMediumInt
  name         String       @db.VarChar(100)
  Color        Int?         @db.UnsignedTinyInt
  createdAt    DateTime     @default(now()) @db.Timestamp(0)
  updatedAt    DateTime?    @db.Timestamp(0)
  Door         Door[]
  Congregation Congregation @relation(fields: [id_cong_app], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "id_cong_app")

  @@index([id_cong_app], map: "id_cong_app_idx")
}

model Publisher {
  idPublisher     Int           @id @default(autoincrement()) @db.UnsignedMediumInt
  name            String?       @db.VarChar(255)
  congregation_id Int?          @db.UnsignedMediumInt
  createdAt       DateTime      @default(now()) @db.Timestamp(0)
  updatedAt       DateTime?     @db.Timestamp(0)
  Congregation    Congregation? @relation(fields: [congregation_id], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "idCongregation2")

  @@index([congregation_id], map: "idCongregation_idx")
}

model Territory {
  idTerritory     Int           @id @default(autoincrement()) @db.UnsignedMediumInt
  name            String?       @db.VarChar(255)
  congregation_id Int?          @db.UnsignedMediumInt
  createdAt       DateTime      @default(now()) @db.Timestamp(0)
  updatedAt       DateTime?     @db.Timestamp(0)
  Building        Building[]
  Congregation    Congregation? @relation(fields: [congregation_id], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "idCongregation")

  @@index([congregation_id], map: "idCongregation_idx")
}

model App1Entry {
  id        Int       @id @default(autoincrement())
  id_cong   Int
  Gps       String
  Landmark  String
  Territory String
  Url       String
  createdAt DateTime  @default(now()) @db.Timestamp(0)
  updatedAt DateTime? @db.Timestamp(0)
}

model Login {
  id                 Int          @id @default(autoincrement()) @db.UnsignedInt
  name               String       @db.VarChar(100)
  email              String       @unique @db.VarChar(150)
  password           String?      @db.VarChar(255)
  googleSignIn       Boolean      @default(false)
  whatsapp           String       @db.VarChar(20)
  congregationNumber Int          @db.UnsignedMediumInt
  isAdmin            Boolean      @default(false)
  createdAt          DateTime     @default(now()) @db.Timestamp(0)
  updatedAt          DateTime     @updatedAt
  loginCount         Int          @default(0)
  Congregation       Congregation @relation(fields: [congregationNumber], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "LoginToCongregation")

  @@index([congregationNumber], map: "Login_cong_idx")
}

model Invite {
  id                 Int          @id @default(autoincrement())
  name               String       @db.VarChar(100)
  email              String       @db.VarChar(150)
  whatsapp           String       @db.VarChar(20)
  congregationNumber Int          @db.UnsignedMediumInt
  status             String       @default("pending") @db.VarChar(20)
  createdAt          DateTime     @default(now()) @db.Timestamp(0)
  updatedAt          DateTime     @updatedAt
  Congregation       Congregation @relation(fields: [congregationNumber], references: [idCongregation], onDelete: Cascade, onUpdate: NoAction, map: "InviteToCongregation")

  @@index([congregationNumber], map: "Invite_cong_idx")
  @@index([email])
}
